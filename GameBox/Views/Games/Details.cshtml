@inject UserManager<ApplicationUser> UserManager
@using Microsoft.AspNetCore.Identity
@model GameBox.Models.Game

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{ var user = UserManager.GetUserAsync(User).Result; }

<script type="text/javascript">
    window.onload = function() {
        document.getElementById("comment_form").addEventListener('submit',
            function(event) {
                event.preventDefault();
                form_submit();
            });
    }

    function form_submit() {
        const formData = new FormData(document.getElementById("comment_form"));

        const url = '/api/comments/create';
        const method = "POST";
        const body = formData;

        fetch(url, { method, body })
            .then(response => response.text())
            .then(
                (result) => {
                    location.reload();
                },
                (err) => {
                    console.error(err);
                }
            );
    }
</script>

<style type="text/css">
    .item {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        --main-color: #b31919;
        color: #333;
        font-size: 1.2rem;
        line-height: 1.5;
        cursor: default;
        -webkit-box-sizing: border-box;
        display: flex;
        margin: 0 0 14px 0;
        position: relative;
        background-color: #fff;
        padding: 10px;
        box-shadow: 0 0 1px rgba(0, 0, 0, 0.2);
        border: solid 1px orange;
        background-color: azure;
    }

    .gp-game-cover {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        --main-color: #b31919;
        color: #333;
        font-size: 1.2rem;
        line-height: 1.5;
        cursor: default;
        -webkit-box-sizing: border-box;
        position: relative;
        flex-shrink: 0;
        margin-right: 20px;
    }

    .info {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        --main-color: #b31919;
        color: #333;
        font-size: 1.2rem;
        line-height: 1.5;
        cursor: default;
        -webkit-box-sizing: border-box;
        padding: 0;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    .media-heading {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        --main-color: #b31919;
        color: #333;
        cursor: default;
        -webkit-box-sizing: border-box;
        margin: 14px 0 0 0;
    }

    .text-muted {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        --main-color: #b31919;
        font-size: 1.2rem;
        line-height: 1.5;
        cursor: default;
        -webkit-box-sizing: border-box;
        color: #777;
    }

    .meta-info {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        --main-color: #b31919;
        color: #333;
        cursor: default;
        -webkit-box-sizing: border-box;
        margin: 14px 0 0 0;
    }

    .footer {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        --main-color: #b31919;
        color: #333;
        font-size: 1.2rem;
        line-height: 1.5;
        font-family: Arial, Helvetica, sans-serif;
        cursor: default;
        -webkit-box-sizing: border-box;
        margin-top: auto;
    }

    .game-rating-points {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        --main-color: greene;
        color: green;
        font-size: 1.2rem;
        line-height: 1.5;
        cursor: default;
        -webkit-box-sizing: border-box;
        display: flex;
        flex-direction: column;
    }

    .game-rating-item {
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        --main-color: green;
        cursor: default;
        -webkit-box-sizing: border-box;
        margin: 10px 0 0 5px;
        text-align: center;
        color: green;
    }

    .editorial .value {
        color: green;
        border-color: green;
    }

    .readers .value {
        color: green;
        border-color: green;
    }

    .game-rating-points .value {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border: 1px solid green;
        border-radius: 100%;
        margin: 0 auto 5px;
    }

    .info .title { margin: 14px 0 0 0; }

    a {
        color: #333;
        text-decoration: none;
    }

    a.back {
        position: relative;
        display: inline-block;
        font-family: Arial, Helvetica, FreeSans, "Liberation Sans", "Nimbus Sans L", sans-serif;
        font-size: 1.5em;
        font-weight: 700;
        color: rgb(245, 245, 245);
        text-shadow: 0 -1px rgba(0, 0, 0, .1);
        text-decoration: none;
        user-select: none;
        padding: .3em 1em;
        outline: none;
        border: none;
        margin-top: 20pt;
        border-radius: 3px;
        background: #0c9c0d linear-gradient(#82d18d, #0c9c0d);
        box-shadow: inset #72de26 0 -1px 1px, inset 0 1px 1px #98ff98, #3caa3c 0 0 0 1px, rgba(0, 0, 0, .3) 0 2px 5px;
        -webkit-animation: pulsate 1.2s linear infinite;
        animation: pulsate 1.2s linear infinite;
    }

    a.back:hover {
        -webkit-animation-play-state: paused;
        animation-play-state: paused;
        cursor: pointer;
    }

    a.back:active {
        top: 1px;
        color: #fff;
        text-shadow: 0 -1px rgba(0, 0, 0, .3), 0 0 5px #ffd, 0 0 8px #fff;
        box-shadow: 0 -1px 3px rgba(0, 0, 0, .3), 0 1px 1px #fff, inset 0 1px 2px rgba(0, 0, 0, .8), inset 0 -1px 0 rgba(0, 0, 0, .05);
    }

    @@-webkit-keyframes pulsate {
        50% {
            color: #fff;
            text-shadow: 0 -1px rgba(0, 0, 0, .3), 0 0 5px #ffd, 0 0 8px #fff;
        }
    }

    @@keyframes pulsate {
        50% {
            color: #fff;
            text-shadow: 0 -1px rgba(0, 0, 0, .3), 0 0 5px #ffd, 0 0 8px #fff;
        }

         

    
</style>

<h1>Game Details</h1>

<div>
    <h4>@Model.Title</h4>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt class="col-sm-2">
            Average mark
        </dt>
        <dd class="col-sm-10">
            @if (Model.Comments.Any())
            {
                @Model.Comments.Average(c => c.Mark).ToString("F2")
            }
            else
            {
                @: No marks
            }
        </dd>
    </dl>

    <p>Comments</p>
    <hr/>

    <ul style="list-style: none">
        @foreach (var comment in Model.Comments)
        {
            <div class="item">
                <div class="info">
                    <div>
                        <div class="media-heading title">
                            <p>
                                <i style="color: red;">author:</i> <b> @comment.User.UserName</b>
                            </p>
                        </div>
                        <div class="text-muted"></div>
                        <div class="meta-info">
                            <div>
                                <span class="text-muted">@comment.Content</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="game-rating-points">
                    <div class="editorial game-rating-item">
                        <span class="value">
                            <b>@comment.Mark</b>
                        </span>
                        <div>Оценка</div>
                        @if (user != null)
                        {
                            if (UserManager.GetRolesAsync(user).Result.Contains("Admin"))
                            {
                                <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
                                @:|
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </ul>

    <hr/>
    <p>New Comment</p>
    <hr/>

    @if (user != null)
    {
        <form id="comment_form">
            <input type="hidden" name="GameId" value="@Model.Id"/>
            <input type="hidden" name="UserId" value="@user.Id"/>

            <div class="form-group">
                <label class="control-label">Content</label>
                <textarea name="Content" class="form-control"></textarea>
                <span class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">Mark</label>
                <input type="number" min="1" max="5" name="Mark" class="form-control"/>
                <span class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Add Comment" class="btn btn-primary"/>
            </div>
        </form>
    }
</div>
<div>
    @if (user != null)
    {
        if (UserManager.GetRolesAsync(user).Result.Contains("Admin"))
        {
            <a asp-action="Delete" asp-route-id="@Model.Id" class="back">Delete</a>
            @:|
        }
    }
    <a asp-action="Index" class="back">Back</a>
</div>